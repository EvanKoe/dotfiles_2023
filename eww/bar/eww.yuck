(defwindow notch
  :monitor 0
  :stacking "overlay"
  :exclusive false
  :focusable false
  :geometry (geometry
    :anchor "top center"
    :width 200
    :height 30
    :x 860
    :y 0
  )

  (box
    :class "notch"

    (label
      :text {active_window != "Null" ? active_window : "Desktop"}
      :class "onSecondary"
    )
  )
)

(defwindow bar
  :monitor 0
  :class "bar"
  :stacking "fg"
  :exclusive true
  :focusable false
  :geometry (geometry
    :anchor "top left"
    :width "100%"
    :height "40px"
    :y 0
  )

  (box
    :orientation "h"
    :style "background-color: ${backgroundColor}"
    :space-evenly false
    (left)
    (middle)
    (right)
  )
)

;;
;; Containers
;;
(defwidget left []
  (box
    :space-evenly false

    (box
      :class "container"
      :space-evenly true
      :style "padding: 5px"

      ;; Close window
      (eventbox
        :onclick "hyprctl dispatch killactive"
        :class "closeButton"
        :width 20
      )

      ;; Maximize window
      (eventbox
        :onclick "$HOME/.config/hypr/triggerFullscreen.sh"
        :class "closeButton"
        :style "background-color: #090"
        :hexpand false
        :width 20
      )

      ;; Float window
      (eventbox
        :onclick "hyprctl dispatch togglefloating"
        :class "closeButton"
        :style "background-color: #C8AF14"
        :width 20
      )
    )

    (eventbox
      :onclick "hyprctl dispatch workspace -1"
      :onrightclick "hyprctl dispatch workspace +1"

      (container
        :style "padding: 0 24px; margin: 0;"

        (box
          :class "container"
          :style "padding: 0 14px; margin: 0; border: none;"

          (label
            :text active_workspace
            :class "onSecondary"
            :style "margin: 0"
          )
        )
      )
    )
  )
)

(defwidget middle []
  (box :hexpand true)
)

(defwidget right []
  (box :space-evenly false

    ;; spotify
    (box
      :style "margin: 3px"

      (eventbox
        :class "spotifyContainer"
        :onrightclick {isSpotifyRunning > 1 ? "spotify &" : "echo 'Spotify already running'"}
        :onclick {songName == "" ? "spotify &" : "eww open --toggle musicPlayer"}

        (box
          :space-evenly false

          (image
            :image-width 20
            :image-height 20
            :path "/home/ekoehler/Pictures/icons/spotify.svg"
            :style "margin: 0 8px;"
          )

          (label
            :text {songName == "" ? "Spotify" : songName}
            :class "onSecondary"
            :style "margin-left: 2px"
          )
        )
      )
    )

    ;; bluetooth
    (box
      :style "margin: 3px"
      (eventbox
        :height 20
        :class "bluetoothContainer"
        :onclick "kitty -e bluetuith &"

        (image
          :path "/home/ekoehler/Pictures/icons/bluetooth.png"
          :image-width 20
          :image-height 20
          :style "margin: 0 8px;"
        )
      )
    )


    ;; wifi
    (box
      :style "margin: 3px"

      (eventbox
        :onclick "kitty -e iwctl &"
        :class "wifiContainer"

        (image
          :image-height 20
          :image-width 20
          :path "/home/ekoehler/Pictures/icons/wifi.png"
          :style "margin: 0 8px;"
        )
      )
    )

    ;; brightness
    (container
      (label
        ;; :style {brightness < 15 ? "color: #900" : ""}
        :text "${brightness}%"
        :class "onSecondary"
        :style "margin-right: 8px"
      )
      (image
        :path "/home/ekoehler/Pictures/icons/brightness.png"
        :image-width 20
        :image-height 20
        :style "margin-right: 8px"
      )
    )

    ;; sound
    (container
      :onclick "pactl set-sink-mute @DEFAULT_SINK@ toggle"
      (label
        :text {is_mute == "true" ? "Muted" : "${sound}%"}
        :class "onSecondary"
        :style "margin-right: 8px"
      )
      (image
        :path "/home/ekoehler/Pictures/icons/${is_mute == "true" ? 'mute' : 'sound'}.png"
        :image-width 20
        :image-height 20
        :style "margin-right: 8px"
      )
    )

    ;; battery
    (container
      (label
        :text "${battery}%"
        :class "onSecondary"
        :style "margin-right: 2px"
      )
      (image
        :image-height 20
        :image-width 20
        :path "/home/ekoehler/Pictures/icons/${EWW_BATTERY.BAT1.status == "Discharging" ? 'battery' : 'charging'}.png"
        :style "margin-right: 8px"
      )
    )

    ;; time
    (container
      (label :text date :class "onSecondary")
      (light_container :style "margin: 0"
        (label :text time :class "onPrimary")
      )
    )

    ;; notifications
    ;; (eventbox
    ;;   :onclick "eww open --toggle notificationWindow"
    ;;   :class "opacityOnHover"
    ;;
    ;;   (light_container
    ;;     (image
    ;;       :path "/home/ekoehler/Pictures/icons/notif.png"
    ;;       :image-width 20
    ;;       :image-height 20
    ;;       :class 'onSecondary'
    ;;     )
    ;;   )
    ;; )
  )
)

;;
;; Widgets
;;
(defwidget container [?onhover ?onhoverlost ?onclick ?onrightclick ?class ?eventClass]
  (eventbox
    :onhover onhover
    :onclick onclick
    :onrightclick onrightclick
    :onhoverlost onhoverlost
    :class eventClass

    (box
      :orientation "h"
      :hexpand false
      :space-evenly false
      :class {class + " container"}

      (children)
    )
  )
)

(defwidget light_container [?style]
  (box
    :orientation "h"
    :hexpand false
    :space-evenly "false"
    :class "lcontainer"
    :style style
    (children)
  )
)

(defwidget dock_app [path image]
  (eventbox :onclick path
    (image
      :image-height 20
      :image-width 20
      :path image
    )
  )
)
